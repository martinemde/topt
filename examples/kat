#!/usr/bin/env ruby

$:.unshift(File.expand_path('../lib', File.dirname(__FILE__)))

require 'thor_options'

class Kat
  extend ThorOptions

  option :blank, type: :boolean, aliases: %w[-b],
    desc: "Number the non-blank output lines, starting at 1."

  option :number, type: :boolean, aliases: %w[-n],
    desc: "Number the output lines, starting at 1."

  # If we only wanted to accept one file, we could use this and then access it
  # with @arguments[:filename], but we'd rather accept many files, so we'll
  # use extras to collect extra command line args
  #
  # argument :filename

  def initialize(given_args=ARGV)
    @options, @arguments, @extras = self.class.parse_options!(given_args)
  end

  def call
    if @extras.empty?
      output $stdin
    else
      @extras.each do |file|
        File.open(file) do |f|
          output f
        end
      end
    end
  end

  def output(input)
    num = 1
    input.each_line do |line|
      if (@options[:number] || @options[:blank]) && !(@options[:blank] && line.strip.empty?)
        puts "#{num.to_s.rjust(6)}\t#{line}"
        num += 1
      else
        puts line
      end
    end
  end
end

Kat.new(ARGV).call
